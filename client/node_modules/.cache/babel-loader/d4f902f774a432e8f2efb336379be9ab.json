{"ast":null,"code":"import { ADD_TO_CART, UPDATE_CART, REMOVE_FROM_CART, CHECKOUT, SET_DELIVERY_CHOICE } from '../actions/actionTypes';\nconst initialState = {\n  items: localStorage.getItem('items') ? JSON.parse(localStorage.getItem('items')) : [],\n  delivery: 'standard'\n};\nconst mapItem = (item, payload) => {\n  if (item.id === payload.product.id) {\n    return {\n      ...item,\n      quantity: item.quantity + 1\n    };\n  }\n  return item;\n};\nconst updateMapItem = (item, payload) => {\n  if (item.id === payload.id) {\n    return {\n      ...item,\n      quantity: payload.quantity\n    };\n  }\n  return item;\n};\nconst filterItem = (item, payload) => item.id !== payload.id;\nconst cart = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      const itemFound = !!state.items.find(item => item.id === payload.product.id);\n      if (itemFound) {\n        return {\n          ...state,\n          items: state.items.map(item => mapItem(item, payload))\n        };\n      }\n      return {\n        ...state,\n        items: [{\n          ...payload.product,\n          quantity: 1\n        }, ...state.items]\n      };\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        items: state.items.filter(item => filterItem(item, payload))\n      };\n    case UPDATE_CART:\n      return {\n        ...state,\n        items: state.items.map(item => updateMapItem(item, payload))\n      };\n    case SET_DELIVERY_CHOICE:\n      return {\n        ...state,\n        delivery: payload.choice\n      };\n    case CHECKOUT:\n      return {\n        delivery: 'standard',\n        items: []\n      };\n    default:\n      return state;\n  }\n};\nexport default cart;","map":{"version":3,"names":["ADD_TO_CART","UPDATE_CART","REMOVE_FROM_CART","CHECKOUT","SET_DELIVERY_CHOICE","initialState","items","localStorage","getItem","JSON","parse","delivery","mapItem","item","payload","id","product","quantity","updateMapItem","filterItem","cart","state","type","itemFound","find","map","filter","choice"],"sources":["F:/_files1/final/client/src/lib/state/reducers/cart.js"],"sourcesContent":["import {\n  ADD_TO_CART,\n  UPDATE_CART,\n  REMOVE_FROM_CART, \n  CHECKOUT,\n  SET_DELIVERY_CHOICE\n} from '../actions/actionTypes'\n\n\nconst initialState = {\n  items: localStorage.getItem('items') ? JSON.parse(localStorage.getItem('items')) : [],\n  delivery: 'standard'\n};\n\nconst mapItem = (item, payload) => {\n  if (item.id === payload.product.id) { return { ...item, quantity: item.quantity + 1 } }\n  return item\n}\nconst updateMapItem = (item, payload) => { \n  if (item.id === payload.id) { return { ...item, quantity: payload.quantity} }\n  return item\n}\nconst filterItem = (item, payload) => item.id !== payload.id\n\nconst cart = (state = initialState, {type, payload}) => { \n  switch (type) {\n    case ADD_TO_CART:\n      const itemFound = !!state.items.find(item => item.id === payload.product.id)\n      if (itemFound) { return { ...state, items: state.items.map(item => mapItem(item, payload)) }}\n      return { ...state, items: [{ ...payload.product, quantity: 1 }, ...state.items] }\n    case REMOVE_FROM_CART: return { ...state, items: state.items.filter(item => filterItem(item, payload)) }\n    case UPDATE_CART: return { ...state, items: state.items.map(item => updateMapItem(item, payload))}\n    case SET_DELIVERY_CHOICE: return {...state, delivery: payload.choice}\n    case CHECKOUT: return {delivery: 'standard', items: []}\n    default: return state;\n  } \n}\nexport default cart"],"mappings":"AAAA,SACEA,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,QAAQ,EACRC,mBAAmB,QACd,wBAAwB;AAG/B,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE;EACrFG,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;EACjC,IAAID,IAAI,CAACE,EAAE,KAAKD,OAAO,CAACE,OAAO,CAACD,EAAE,EAAE;IAAE,OAAO;MAAE,GAAGF,IAAI;MAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;IAAE,CAAC;EAAC;EACtF,OAAOJ,IAAI;AACb,CAAC;AACD,MAAMK,aAAa,GAAGA,CAACL,IAAI,EAAEC,OAAO,KAAK;EACvC,IAAID,IAAI,CAACE,EAAE,KAAKD,OAAO,CAACC,EAAE,EAAE;IAAE,OAAO;MAAE,GAAGF,IAAI;MAAEI,QAAQ,EAAEH,OAAO,CAACG;IAAQ,CAAC;EAAC;EAC5E,OAAOJ,IAAI;AACb,CAAC;AACD,MAAMM,UAAU,GAAGA,CAACN,IAAI,EAAEC,OAAO,KAAKD,IAAI,CAACE,EAAE,KAAKD,OAAO,CAACC,EAAE;AAE5D,MAAMK,IAAI,GAAGA,CAACC,KAAK,GAAGhB,YAAY,EAAE;EAACiB,IAAI;EAAER;AAAO,CAAC,KAAK;EACtD,QAAQQ,IAAI;IACV,KAAKtB,WAAW;MACd,MAAMuB,SAAS,GAAG,CAAC,CAACF,KAAK,CAACf,KAAK,CAACkB,IAAI,CAACX,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKD,OAAO,CAACE,OAAO,CAACD,EAAE,CAAC;MAC5E,IAAIQ,SAAS,EAAE;QAAE,OAAO;UAAE,GAAGF,KAAK;UAAEf,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACmB,GAAG,CAACZ,IAAI,IAAID,OAAO,CAACC,IAAI,EAAEC,OAAO,CAAC;QAAE,CAAC;MAAA;MAC5F,OAAO;QAAE,GAAGO,KAAK;QAAEf,KAAK,EAAE,CAAC;UAAE,GAAGQ,OAAO,CAACE,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,EAAE,GAAGI,KAAK,CAACf,KAAK;MAAE,CAAC;IACnF,KAAKJ,gBAAgB;MAAE,OAAO;QAAE,GAAGmB,KAAK;QAAEf,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACoB,MAAM,CAACb,IAAI,IAAIM,UAAU,CAACN,IAAI,EAAEC,OAAO,CAAC;MAAE,CAAC;IACxG,KAAKb,WAAW;MAAE,OAAO;QAAE,GAAGoB,KAAK;QAAEf,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACmB,GAAG,CAACZ,IAAI,IAAIK,aAAa,CAACL,IAAI,EAAEC,OAAO,CAAC;MAAC,CAAC;IAClG,KAAKV,mBAAmB;MAAE,OAAO;QAAC,GAAGiB,KAAK;QAAEV,QAAQ,EAAEG,OAAO,CAACa;MAAM,CAAC;IACrE,KAAKxB,QAAQ;MAAE,OAAO;QAACQ,QAAQ,EAAE,UAAU;QAAEL,KAAK,EAAE;MAAE,CAAC;IACvD;MAAS,OAAOe,KAAK;EACvB;AACF,CAAC;AACD,eAAeD,IAAI"},"metadata":{},"sourceType":"module"}